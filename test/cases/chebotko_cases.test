>>> from Controller.controller import translate

>>> translate('''SELECT ?a ?e ?w WHERE { { {?a person:name 'Paul'} OPTIONAL {?a person:email ?e} } OPTIONAL {?a person:web ?w} }''', True)
SELECT Coalesce(q1.a, q2.a) as a, e, w
FROM (SELECT Coalesce(q1.a, q2.a) as a, personname, Paul, personemail, e
FROM (SELECT s as a, p as personname, o as Paul
FROM Triple
WHERE p = 'person:name' AND o = 'Paul') as q1
LEFT OUTER JOIN (SELECT s as a, p as personemail, o as e
FROM Triple
WHERE p = 'person:email') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)) as q1
LEFT OUTER JOIN (SELECT s as a, p as personweb, o as w
FROM Triple
WHERE p = 'person:web') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)

>>> translate('''SELECT ?a ?ew WHERE { { {?a person:name 'Paul'} OPTIONAL {?a person:email ?ew} } OPTIONAL {?a person:web ?ew} }''', True)
SELECT Coalesce(q1.a, q2.a) as a, Coalesce(q1.ew, q2.ew) as ew
FROM (SELECT Coalesce(q1.a, q2.a) as a, personname, Paul, personemail, ew
FROM (SELECT s as a, p as personname, o as Paul
FROM Triple
WHERE p = 'person:name' AND o = 'Paul') as q1
LEFT OUTER JOIN (SELECT s as a, p as personemail, o as ew
FROM Triple
WHERE p = 'person:email') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)) as q1
LEFT OUTER JOIN (SELECT s as a, p as personweb, o as ew
FROM Triple
WHERE p = 'person:web') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null) AND (q1.ew=q2.ew or q1.ew=Null or q2.ew=Null)

>>> translate('''SELECT ?a ?e ?w WHERE {{?a person:name 'Paul'} OPTIONAL {{?a person:email ?e} OPTIONAL {?a person:web ?w}}}''', True)
SELECT Coalesce(q1.a, q2.a) as a, n, e, w
FROM (SELECT s as a, p as personname, o as n
FROM Triple
WHERE p = 'person:name') as q1
INNER JOIN (SELECT Coalesce(q1.a, q2.a) as a, personemail, e, personweb, w
FROM (SELECT s as a, p as personemail, o as e
FROM Triple
WHERE p = 'person:email') as q1
LEFT OUTER JOIN (SELECT s as a, p as personweb, o as w
FROM Triple
WHERE p = 'person:web') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)) as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)

>>> translate('''SELECT ?x ?y ?z WHERE {{?x person:name 'Paul'} OPTIONAL {{?y person:name 'george'} OPTIONAL {?x person:email ?z}}}''', True)
SELECT Coalesce(q1.x, q2.x) as x, y, z
FROM (SELECT s as x, p as personname, o as paul
FROM Triple
WHERE p = 'person:name' AND o = 'paul') as q1
INNER JOIN (SELECT y, personname, george, x, personemail, z
FROM (SELECT s as y, p as personname, o as george
FROM Triple
WHERE p = 'person:name' AND o = 'george') as q1
LEFT OUTER JOIN (SELECT s as x, p as personemail, o as z
FROM Triple
WHERE p = 'person:email') as q2
ON False) as q2
ON (q1.x=q2.x or q1.x=Null or q2.x=Null) AND (q1.personname=q2.personname or q1.personname=Null or q2.personname=Null)

>>> translate('''SELECT ?a ?p WHERE {{?a person:name 'Paul'} {{?a person:phone ?p} UNION {?a person:cell ?p}}}''', True)
SELECT Coalesce(q1.a, q2.a) as a, n, p
FROM (SELECT s as a, p as personname, o as n
FROM Triple
WHERE p = 'person:name') as q1
INNER JOIN (SELECT personphone, personcell, q1.a, q1.p
FROM (SELECT s as a, p as personphone, o as p
FROM Triple
WHERE p = 'person:phone') as q1
LEFT OUTER JOIN (SELECT s as a, p as personcell, o as p
FROM Triple
WHERE p = 'person:cell') as q2
ON False
UNION
SELECT personcell, personphone, q1.a, q1.p
FROM (SELECT s as a, p as personcell, o as p
FROM Triple
WHERE p = 'person:cell') as q1
LEFT OUTER JOIN (SELECT s as a, p as personphone, o as p
FROM Triple
WHERE p = 'person:phone') as q2
ON False) as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)