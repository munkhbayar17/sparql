>>> from Controller.controller import translate

>>> translate('''SELECT ?a ?e ?w WHERE {{?a person:email ?e} {?a person:web ?w}}''', True)
SELECT Coalesce(q1.a, q2.a) as a, e, w
FROM (SELECT s as a, p as personemail, o as e
FROM Triple
WHERE p = 'person:email') as q1
INNER JOIN (SELECT s as a, p as personweb, o as w
FROM Triple
WHERE p = 'person:web') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)

>>> translate('''SELECT ?a ?e ?w WHERE {{?a person:email ?e} OPTIONAL {?a person:web ?w}}''', True)
SELECT Coalesce(q1.a, q2.a) as a, e, w
FROM (SELECT s as a, p as personemail, o as e
FROM Triple
WHERE p = 'person:email') as q1
LEFT OUTER JOIN (SELECT s as a, p as personweb, o as w
FROM Triple
WHERE p = 'person:web') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)

>>> translate('''SELECT ?a ?e ?w WHERE {{?a person:email ?e} UNION {?a person:web ?w}}''', True)
SELECT q1.a, e, w
FROM (SELECT s as a, p as personemail, o as e
FROM Triple
WHERE p = 'person:email') as q1
LEFT OUTER JOIN (SELECT s as a, p as personweb, o as w
FROM Triple
WHERE p = 'person:web') as q2
ON False
UNION
SELECT q1.a, e, w
FROM (SELECT s as a, p as personweb, o as w
FROM Triple
WHERE p = 'person:web') as q1
LEFT OUTER JOIN (SELECT s as a, p as personemail, o as e
FROM Triple
WHERE p = 'person:email') as q2
ON False

>>> translate('''SELECT ?n ?age WHERE {{?a person:fistname ?n . ?a person:age ?age FILTER (?age>30)}''', True)
SELECT n, age
FROM (SELECT s as a, p as personfistname, o as n
FROM Triple
WHERE p = 'person:fistname') as q1
INNER JOIN (SELECT s as a, p as personage, o as age
FROM Triple
WHERE p = 'person:age') as q2
ON (q1.a=q2.a or q1.a=Null or q2.a=Null)
WHERE age > 30

>>> translate('''SELECT  ?a ?p WHERE { ?a person:postcode ?p . FILTER ( BOUND(?p) && ?p != "M139WJ" ) }''', True)
SELECT s as a, o as p
FROM Triple
WHERE p = 'person:postcode' AND ( o IS NOT null AND o != "M139WJ" )